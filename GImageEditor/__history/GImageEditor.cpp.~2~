//C-
//C- This software is subject to, and may be distributed under, the
//C- GNU General Public License, either Version 2 of the license,
//C- or (at your option) any later version. The license should have
//C- accompanied the software or you may obtain a copy of the license
//C- from the Free Software Foundation at http://www.fsf.org .
//C-
//C- This program is distributed in the hope that it will be useful,
//C- but WITHOUT ANY WARRANTY; without even the implied warranty of
//C- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//C- GNU General Public License for more details.
//C-
# include "GImageEditor.h"
# include "config.h"
#include <string.h>
#include <stdio.h>


namespace ocr{


#include "LoadImage.h"
#include "readVectorBase.h"
#include "drawBase.h"
#include "drawPage.h"	
#include "startOCR.h"
#include "ImageProcess.h"
#include "setLetter.h"

GImageEditor::~GImageEditor(){

	try
	{
		init();
	}
	catch(int a)
	{
		destroy();
	}
	

}

void GImageEditor::destroy(void)
{
}

GImageEditor::GImageEditor()
{
}



// ----- initialization

void
GImageEditor::init()
{
//c_out.open("C:/consoleImg.html");
}
/*
void GImageEditor::LoadImage(){
//string filePath,fileName, name;
//fileIsDjvu=0; fileIsPDF=0;
//AnsiString str;
//unsigned char *pSrc,*pDest;

	#ifdef WIN32_DRAW
		//ImageEnView1->IO->LoadFromFile(Memo1->Lines->Strings[0]);
		//ImageEnVect1->IO->LoadFromFile(Memo1->Lines->Strings[0]);
		//ImageEnView1->Fit();
		//ImageEnVect1->Fit();
		//ImageEnVect1->Update(); //ShowMessage("");
	#endif


//		PechaLoaded=1; fileIndex=0;
//		RadioGroup1->ItemIndex==0?batchMode=1:batchMode=0;

//		pechaDataLoaded=0; pageFrameIndex=-1;
//		Label1->Caption=Memo1->Lines->Strings[0];
//	  }
/*
	if(checkBoxOCR->Checked==true){
			  Label1->Caption="Read data"; PageControl1->ActivePage=TabSheet2;
			  Application->ProcessMessages();
			  firstClick=1;BitBtnCancelClick(this);
			  selectMode=0;
			  dragMode=1;
			  pageFrameIndex=-1;
			  pageFrameMode=1;
			  selectFrameMode=1;
			  ObjectFrameClick=1;
			  frameExist=0; //Ì‡ÎË˜ËÂ ÙÂÈÏÓ‚ ·ËÚÏÂÔ‡
	}

	 str=Memo1->Lines->Strings[0];
	 filePath=str.c_str();
	 fileName=filePath;
	 wstring textWide;
	 WideString wStr;
	 string strText, strLine;

	 str=Memo1->Lines->Strings[0];
	  filePath=str.c_str();
	  fileName=filePath;
			 filePath.resize(filePath.rfind('\\'));
			 fileName.erase(0,filePath.size()+1);
			 nameTextOCR=fileName;
			 nameTextOCR.resize(nameTextOCR.rfind('.'));
			 nameTextOCR=filePath+"/_press/"+nameTextOCR+".ocr";

	  if(FileExists(nameTextOCR.c_str())){
		readStrArray(nameTextOCR); //SH(strArray.size());
	 }
}


}//_____________________________________________________________________________
*/


};



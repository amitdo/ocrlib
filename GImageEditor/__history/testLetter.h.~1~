/** This function check correlation of test letter with all letter database and return array of letters with close correlation
*/ 
string GImageEditor::testLetter(commandData *inputData, unsigned int idNumber){

	int c1;
	int print=1;
	vector<glyphOCR>letterLine;
	int index=-1;
	index=aliKali.indexById(idNumber);
	if(index<0)return "";
	ostringstream out_;
	out_<<"<ocrData>setBase</ocrData><setBase>";
	
	GBitmap *img128=aliKali[index]->mask128[0].unPackMask();
	//cout<<" w="<<img128->rows()<<endl;
	//img128->printToScreen();

	//first we check letter base -> letter corelation
    for(int letterIndex=0;letterIndex<aliKali.letterCount;letterIndex++){
		//if(letterIndex!=index)continue;
			glyphOCR glyph; glyph.copy(aliKali[letterIndex]);
			c1=setCorrelation(img128,&glyph,1); glyph.correlation=c1;
		    if(letterIndex==index){
				aliKali[letterIndex]->selfCorrelation=c1;
				out_<<"{glyph id=\""<<idNumber<<"\" sC=\""<<c1<<"\"/}";
			}else{
			    if(c1>70){
					letterLine.push_back(glyph);
					out_<<"{glyph id=\""<<idNumber<<"\" cS=\""<<c1<<"\"/}";
			    }
			}
			
            DT("name="<<aliKali[letterIndex]->name<<" correlation="<<c1<<" id="<<glyph.idNumber<<endl);
		    if(c1>aliKali[letterIndex]->codeSpace)aliKali[letterIndex]->codeSpace=c1;
	}
    img128->destroy();
	out_<<"</setBase>";
	string str=out_.str();
	writeText(str,inputData->data["inputPath"]);
	
    /*
    //next we check letter -> letter base corelation
	for(int letterIndex=0;letterIndex<aliKali.base.size()/20;letterIndex++){
		//if(letterIndex==index)continue;
			glyphOCR glyph; glyph.copy(aliKali[index]);
		    img128=aliKali[letterIndex]->mask128[0].unPackMask();
			c1=setCorrelation(img128,&glyph,1); glyph.correlation=c1;
			DT("name="<<aliKali[letterIndex]->name<<" correlation="<<c1<<" id="<<aliKali[letterIndex]->idNumber<<endl);
	 	    if(c1>90){
				glyph.copy(aliKali[letterIndex]);
			    letterLine.push_back(glyph);
			}	
		    img128->destroy();
	}
	cout<<" letterLine.size()="<<letterLine.size()<<endl;
    */

	if(letterLine.size()){
		///string str=drawEditLetter(inputData,letterLine[0].idNumber);
		
		ostringstream out;
		//out<<"<script language=\"javaScript\">";
		for(int i=0;i<letterLine.size()&i<10;i++){
			out<<"<a href=\"?m=edit&l="<<letterLine[i].idNumber<<"\", target=\"_blank\">found letter name "<<letterLine[i].name<<" correllation="<<letterLine[i].correlation<<"</a><br>"<<endl;
			//out<<"window.open(\"?m=edit&l="<<letterLine[i].idNumber<<"\",  \"_blank\",\"width=600,height=480, menubar=no,location=no,resizable=yes,scrollbars=yes,status=no \");"<<endl;
		}
		//out<<"</script>";
		str=out.str();
		cout<<str;
		return str;
    }else{
	    str="no letters found";
		return str;

	}
	
}//__________________________________________________________________________










